# .github/workflows/firebase-hosting-pr.yml
# Build & deploy a preview of the Vite site for every PR

name: Deploy to Firebase Hosting on PR

on: pull_request

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build_and_preview:
    # Skip PRs that come from forks (no secrets there)
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}

    runs-on: ubuntu-latest

    # All run: commands execute inside vite-project/
    defaults:
      run:
        working-directory: ./vite-project

    steps:
      # 1 — checkout code
      - uses: actions/checkout@v4

      # 2 — set up Node + NPM cache
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./vite-project/package-lock.json

      # 3 — recreate .env.local from GitHub Secrets
      - name: Re-create .env.local for CI
        run: |
          cat > .env.local <<EOF
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          VITE_GEMINI_API_KEY=${{ secrets.VITE_GEMINI_API_KEY }}
          EOF

      # 4 — check Firestore and Gemini connectivity
      - name: Check Firestore and Gemini connectivity
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}
        run: |
          npm install dotenv firebase node-fetch@2
          node ci-checks.js

      # 5 — install & build
      - name: Check VITE_GEMINI_API_KEY is present
        run: |
          if [ -z "$VITE_GEMINI_API_KEY" ]; then
            echo "VITE_GEMINI_API_KEY is not set in GitHub environment secrets. Build cannot continue." >&2
            exit 1
          else
            echo "VITE_GEMINI_API_KEY is present."
          fi
        env:
          VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build # package.json must contain "build": "vite build"

      # 6 — deploy to a short-lived preview channel
      - name: Deploy preview to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ONO_CAFETERIA }}
          projectId: ono-cafeteria
          entryPoint: ./vite-project
          channelId: pr-${{ github.event.pull_request.number }}
          expires: 7d
