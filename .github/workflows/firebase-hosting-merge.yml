# Deploy to Firebase Hosting whenever main is updated
# ───────────────────────────────────────────────────
# • Your actual Vite project lives in ./vite-project
# • Firebase config (.env.local) is rebuilt from GitHub Secrets
# • Uses Node 20 and npm ci for reproducible installs
# • Deploys to the live channel of project ono‑cafeteria

name: Deploy to Firebase Hosting on merge

on:
  push:
    branches: [main]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    # Every `run:` command below executes inside vite-project/
    defaults:
      run:
        working-directory: ./vite-project

    steps:
      # 1 — Check out the source code
      - uses: actions/checkout@v4

      # 2 — Re‑create .env.local from repository secrets
      #     (✓ keeps credentials out of the repo, ✓ works exactly like local dev)
      - name: Re-create .env.local for CI
        run: |
          cat > .env.local <<EOF
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}
          EOF

      # 3 — Set up Node and cache npm dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./vite-project/package-lock.json

      # 4 — Install dependencies & build
      - name: Install dependencies
        run: npm ci # uses the package-lock.json in vite-project/
      - name: Build
        run: npm run build # must exist in vite-project/package.json

      # 5 — Deploy the dist/ folder to Firebase Hosting (live channel)
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ONO_CAFETERIA }}
          projectId: ono-cafeteria
          channelId: live
          entryPoint: ./vite-project # where firebase.json lives
